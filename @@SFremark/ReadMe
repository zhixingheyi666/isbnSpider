1.本程序是简易程序，采用执行流的方式，故顺序调用相应的功能函数即可。
2.根据isbn从国图opac查询书籍，运行isbnTt@xx.py程序即可
    在运行前，根据需要，反注释掉相应的功能函数即可。
3.表的功能简介：
    booklist:
        原版辅助编目库
    attBooklist：
        临时辅助编目信息存放表。运行联网查询opac时，获得的信息先存储在这个表中
        然后一次性select into 到 booklist 表中，同时select into到备份表abklistbook中，
        然后为了避免重复，清空这个表以防下次使用时，向booklist重复写入内容
        -- insert into booklist(adds, BCid, Caste, Epitome,  extName, ISBN, keyword, PageMode, Pages, Price, PubID, publish, PublishDate, Title, translator, Version, Writer)
        --  	select adds, BCid, Caste, Epitome,  extName, ISBN, keyword, PageMode, Pages, Price, PubID, publish, PublishDate, Title, translator, Version, Writer from attbooklist;

        -- insert into abkbooklist(adds, BCid, Caste, Epitome,  extName, ISBN, keyword, PageMode, Pages, Price, PubID, publish, PublishDate, Title, translator, Version, Writer)
        --  	select adds, BCid, Caste, Epitome,  extName, ISBN, keyword, PageMode, Pages, Price, PubID, publish, PublishDate, Title, translator, Version, Writer from attbooklist;
        -- -- truncate attbooklist;
    preisbn：
        从文件导入的需要联网查询的isbn，暂时存储这个表中，如果每一条都查询成功，那么程序运行
        结束后，这个表应该为空。也就是查询成功的isbn最终会由delISBN删除表中对应行。

4.功能函数简介：
    check:
        注释掉其他函数后，单独使用，配合扫码枪，判断某一本书的信息是否已经
            存在于编目库中,其功能在isbnTosql函数中又重复实现了一次(不小心)。

    isbnTosql:
        从指定路径读取存有isbn的文本文档，并检查每个isbn对应的书籍信息
        如果不存在，则将isbn写入preisbn表，预备从opac查询其信息。
            对存有isbn的文本文档的要求是每行有且仅有一条isbn，和一个回车符(\n)
            isbn直接由扫码枪读取，所以不带'-'字符。
        其返回值也可以作为参数供marc函数处理，所以这个函数运行时，可以反注释掉isbnData

    marcEngine:
        将从opac获取的图书信息对象解码到对一个的字段值，并写入表attbooklist

    marc:
        需要传入包含isbn的list作为参数，迭代每一个isbn，从opac获取对应的信息对象，然后调用marcEngine

    isbnData:
        从表preisbn读取需要联网查询的isbn号，返回值作为参数供marc函数处理

    delISBN:
        从preisbn中删除应查询成功的行，避免重复查询

